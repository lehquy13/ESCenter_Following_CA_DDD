@using ESCenter.Admin.Application.Contracts.Courses.Dtos
@using ESCenter.Admin.Application.Contracts.Users.BasicUsers
@using ESCenter.Domain.Shared
@using ESCenter.Domain.Shared.Courses
@using Matt.SharedKernel.Application.Contracts.Interfaces.Infrastructures
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ESCenter.Admin.Application.Contracts.Courses.Dtos.CourseForDetailDto
@inject ICurrentUserService currentUserService

@{
    ViewData["Title"] = "Edit";
    List<string> genders = EnumProvider.GenderFilters;
    List<string> academics = EnumProvider.AcademicLevels;
    List<string> learningModes = EnumProvider.LearningModes;
    List<string> statuses = EnumProvider.StatusWithoutConfirmed;
    var subjects = (List<SubjectDto>)(ViewData["Subjects"] ?? "");
    var tutors = (List<UserForListDto>)(ViewData["Tutors"] ?? "");

    var isSuperAdmin = currentUserService.Roles.Contains(Role.SuperAdmin.ToString());
}
<h1>Edit</h1>

<hr/>
<div class="card">

    <div class="card-body">
        <h5 class="card-title">@Model.Title</h5>

        <!-- Multi Columns Form -->
        <form class="row g-3" asp-action="EditCourse" asp-route-id="@Model.Id" asp-controller="Course" onsubmit="return callPostActionWithForm(this);">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="col-md-12">
                <label asp-for="Title" class="form-label">Title</label>
                <input type="text" asp-for="Title" class="form-control"/>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <!-- ----------------------------------- -->

            <div class="col-md-4">
                <label asp-for="SubjectId" class="form-label">Subject Name</label>
                <select asp-for="SubjectId" class="form-select">
                    <option selected value="@Model.SubjectId">
                        @Model.SubjectName
                    </option>

                    @foreach (var i in subjects)
                    {
                        @if (i.Name != Model.SubjectName)
                        {
                            <option value="@i.Id">
                                @i.Name
                            </option>
                        }
                    }
                </select>
                <span asp-validation-for="SubjectId" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label class="form-label">Contact Number</label>
                <input type="text" class="form-control" asp-for="ContactNumber"/>
                <span asp-validation-for="ContactNumber" class="text-danger"></span>
            </div>


            <!-- ----------------------------------- -->


            <div class="col-md-4">
                <label class="form-label">Learner</label>
                <input type="text" hidden="hidden" id="LearnerId" asp-for="LearnerId" class="form-control"/>
                <input type="text" class="form-control" asp-for="LearnerName"/>
                <span asp-validation-for="LearnerName" class="text-danger"></span>
            </div>

            <!-- Learner infor -->
            <div class="col-md-3">
                <label asp-for="LearnerGender" class="form-label">Learner's Gender</label>
                <select asp-for="LearnerGender" class="form-select">
                    <option selected>@Model.LearnerGender</option>

                    @foreach (string i in genders)
                    {
                        @if (i != Model.LearnerGender)
                        {
                            <option> @i </option>
                        }
                    }
                </select>
                <span asp-validation-for="LearnerGender" class="text-danger"></span>
            </div>
            <div class="col-md-3">
                <label asp-for="NumberOfLearner" class="form-label">Number Of Learner</label>
                <input type="number" class="form-control" asp-for="NumberOfLearner"/>
                <span asp-validation-for="NumberOfLearner" class="text-danger"></span>

            </div>
            <div class="col-md-3">
                <label asp-for="SessionDuration" class="form-label">Minute/Session</label>
                <input type="number" class="form-control" asp-for="SessionDuration">
                <span asp-validation-for="SessionDuration" class="text-danger"></span>

            </div>
            <div class="col-md-3">
                <label asp-for="SessionPerWeek" class="form-label">Session/Week</label>
                <input type="number" class="form-control" asp-for="SessionPerWeek"/>
                <span asp-validation-for="SessionPerWeek" class="text-danger"></span>

            </div>

            <div class="col-md-3">
                <label asp-for="GenderRequirement" class="form-label">Gender Requirement</label>
                <select asp-for="GenderRequirement" class="form-select">
                    <option selected>@Model.GenderRequirement</option>

                    @foreach (string i in genders)
                    {
                        @if (i != Model.GenderRequirement)
                        {
                            <option> @i </option>
                        }
                    }
                </select>
                <span asp-validation-for="GenderRequirement" class="text-danger"></span>
            </div>
            <div class="col-md-3">
                <label asp-for="LearningMode" class="form-label">Learning Mode</label>
                <select asp-for="LearningMode" class="form-select">
                    <option selected>@Model.LearningMode</option>

                    @foreach (string i in learningModes)
                    {
                        @if (i != Model.LearningMode)
                        {
                            <option> @i </option>
                        }
                    }
                </select>
                <span asp-validation-for="LearningMode" class="text-danger"></span>
            </div>
            <div class="col-md-3">
                <label asp-for="AcademicLevelRequirement" class="form-label">Academic level requirement</label>
                <select asp-for="AcademicLevelRequirement" class="form-select">
                    <option selected>@Model.AcademicLevelRequirement</option>

                    @foreach (string i in academics)
                    {
                        @if (i != Model.AcademicLevelRequirement)
                        {
                            <option> @i </option>
                        }
                    }
                </select>
                <span asp-validation-for="AcademicLevelRequirement" class="text-danger"></span>
            </div>
            <div class="col-md-3">
                <label asp-for="Status" class="form-label">Current status</label>
                <select asp-for="Status" class="form-select">
                    <option selected>@Model.Status.ToString()</option>

                    @foreach (var i in statuses.Where(i => i != Model.Status))
                    {
                        <option> @i </option>
                    }
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>

            </div>

            <div class="col-md-3">
                <label asp-for="SectionFee" class="form-label">Fee</label>
                <input type="number" class="form-control" asp-for="SectionFee" placeholder="0.99"/>
                <span asp-validation-for="SectionFee" class="text-danger"></span>
            </div>

            <div class="col-md-3">
                <label asp-for="ChargeFee" class="form-label">Charge Fee</label>
                <input type="number" class="form-control" asp-for="ChargeFee" placeholder="0.99"/>
                <span asp-validation-for="ChargeFee" class="text-danger"></span>
            </div>

            <div class="col-12">
                <div class="form-floating">
                    <textarea class="form-control" placeholder="Review" asp-for="ReviewDetail" style="height: 100px;"></textarea>
                    <label asp-for="ReviewDetail" class="form-label">Review Detail</label>
                    <span asp-validation-for="ReviewDetail" class="text-danger"></span>

                </div>
            </div>

            <div class="col-12">
                <div class="form-floating">
                    <textarea class="form-control" placeholder="Description" asp-for="Description" style="height: 100px;"></textarea>
                    <label asp-for="Description" class="form-label">Description</label>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>

            <div class="col-12">
                <div class="form-floating">
                    <textarea class="form-control" placeholder="Note" asp-for="Note" style="height: 100px;"></textarea>
                    <label asp-for="Note" class="form-label">Note</label>
                    <span asp-validation-for="Note" class="text-danger"></span>
                </div>
            </div>

            <div class="col-12">
                <label asp-for="Address" class="form-label">Address</label>
                <input type="text" class="form-control" asp-for="Address" placeholder="1234 Main St"/>
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>


            <!-- ----------------------------------- hidden info -->
            <input type="hidden" asp-for="Id"/>
            @if (Model.Status != Status.Confirmed.ToString() || isSuperAdmin)
            {
                <div class="text-center">
                    <button type="submit" class="btn btn-primary">Submit Changes</button>

                    @if (Model.Status == Status.UnverifiedPayment.ToString())
                    {
                        <a href="javascript:CallGetAction('@Url.Action("ConfirmCourse", "Course", new { courseId = Model.Id })')" class="btn btn-primary">Close Course</a>
                    }
                    
                    @if (Model.Status == Status.Confirmed.ToString())
                    {
                        <a href="javascript:CallGetAction('@Url.Action("CancelWithRefund", "Course", new { courseId = Model.Id })')" class="btn btn-warning">Cancel with refunding</a>
                    }
                    
                    <a type="reset" asp-action="Index" class="btn btn-secondary">Back to list</a>
                </div>
            }
            
            @Html.AntiForgeryToken()
        </form>
        <!-- End Multi Columns Form -->
    </div>
</div>


<div class="card">
    <div class="card-body">
        <h5 class="card-title">Pick the tutor for class</h5>
        <form class="row g-3" asp-controller="Course" asp-action="SetTutor" asp-route-courseId="@Model.Id" onsubmit="return callPostActionWithForm(this);">
            <div class="col-md-9">
                <label class="form-label">Tutor</label>
                <input type="text" hidden="hidden" id="tutorId" name="tutorId" class="form-control"/>
                <input type="text" class="form-control" id="tutorInfo" value="@Model.TutorName - @Model.TutorPhoneNumber" readonly="readonly"/>
                <span asp-validation-for="TutorId" class="text-danger"></span>


            </div>
            <div class="col-md-3">
                <label class="form-label">Action</label>

                <div class="row">
                    <button type="button" class="col-4 btn btn-outline-secondary"
                            onclick="OpenGetDialog('@Url.Action("ViewTutor", "Course", new { id = @Model.TutorId })','Tutor information')">
                        View Tutor
                    </button>
                    @if (Model.Status != Status.Confirmed.ToString() || isSuperAdmin)
                    {
                        <button type="button" class="col-4  btn btn-outline-secondary"
                                onclick="RemoveTutor()">
                            Remove
                        </button>
                    }
                </div>
            </div>
            @if (Model.Status != Status.Confirmed.ToString() || isSuperAdmin)
            {
                <div class="text-center">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <a type="reset" asp-action="Index" class="btn btn-secondary">Cancel</a>
                </div>
            }
        </form>

        <!-- Table with stripped rows -->
        @if (Model.Status != Status.Confirmed.ToString() || isSuperAdmin)
        {
            <table id="example" class="table datatable">
                <thead>
                <tr>
                    <!-- an avatar column will be added -->
                    <th scope="col">Status</th>
                    <th scope="col">Tutor Name</th>
                    <th scope="col">Phone Number</th>
                    <th scope="col">Email</th>
                    <th data-sortable="false" scope="col" style="width:30%;">Actions</th>
                </tr>
                </thead>

                <tbody>
                @foreach (var requestGettingClassMinimalDto in Model.CourseRequestListForAdminDtos)
                {
                    <tr>
                        <input hidden name="Id" value="@requestGettingClassMinimalDto.Id"/>
                        <td>@requestGettingClassMinimalDto.RequestStatus</td>
                        <td>
                            <a asp-controller="Tutor" asp-action="Detail"
                               asp-route-id="@requestGettingClassMinimalDto.TutorId">
                                @requestGettingClassMinimalDto.TutorName
                            </a>
                        </td>
                        <td>@requestGettingClassMinimalDto.TutorPhone</td>
                        <td>@requestGettingClassMinimalDto.TutorEmail</td>

                        @if (Model.Status != Status.Confirmed.ToString() || isSuperAdmin)
                        {
                            <td>
                                <button type="button" class="btn btn-primary"
                                        onclick="ApproveTutor('@requestGettingClassMinimalDto.TutorId','@requestGettingClassMinimalDto.TutorName', '@requestGettingClassMinimalDto.TutorPhone');">
                                    Accept
                                </button>

                                <button type="button" class="btn btn-danger"
                                        onclick="OpenGetDialog('@Url.Action("OpenCancelRequestDialog", "Course", new { courseId = Model.Id, requestId = requestGettingClassMinimalDto.Id })','CancelRequest') ">
                                    Cancel
                                </button>
                            </td>
                        }
                    </tr>
                }
                </tbody>
            </table>
            <partial name="_PickTutor" model="@tutors"/>
        }

        <!-- End Table with stripped rows -->
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}